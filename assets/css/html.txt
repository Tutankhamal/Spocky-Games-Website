<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Content-Language" content="pt-br">
    <meta name="description" content="Spocky Games - O melhor canal de jogos do Brasil!">
    <meta name="author" content="Tutankhamal, renejr, Spocky Games">
    <meta name="keywords" content="jogos, comunidade, Spocky Games, loja, YouTube, Discord">
    <link rel="canonical" href="https://spockygames.com.br">
    
    <!-- Open Graph -->
    <meta property="og:title" content="Spocky Games">
    <meta property="og:description" content="Spocky Games - O melhor canal de jogos do Brasil!">
    <meta property="og:image" content="https://imgur.com/JuOYAFI.gif">
    <meta property="og:image:width" content="600">
    <meta property="og:image:height" content="270">
    <meta property="og:url" content="https://spockygames.com.br"> 
    <meta property="og:site_name" content="Spocky Games"> 
    <meta property="og:type" content="website">
    <meta property="og:color" content="#00BFFF">

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Spocky Games">
    <meta name="twitter:description" content="Spocky Games - O melhor canal de jogos do Brasil!">
    <meta name="twitter:image" content="https://imgur.com/JuOYAFI.gif">

    <title>Spocky Games | Início</title>

    <!-- Fonts and Styles -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/assets/css/style.css">
    <link rel="icon" href="/assets/images/favicon.ico" type="image/x-icon">
</head>
<body>
    <canvas id="retro-bg"></canvas>
    <div class="background-container"></div>
    
    <header class="navbar">
        <div class="logo-container">
            <img src="/assets/logo_nav.png" alt="Spocky Games Logo" class="logo">
            <h1 class="site-title"><a href="index.html">Spocky Games</a></h1>
        </div>
        
        <nav class="nav-links">
            <ul>
                <li><a href="index.html" class="active">Início</a></li>
                <li><a href="loja.html">Loja</a></li>
                <li><a href="aovivo.html">Ao Vivo</a></li>
                <li><a href="ondemand.html">On Demand</a></li>
                <li><a href="novidades.html">Novidades</a></li>
                <li><a href="parceiros.html">Parceiros</a></li>
                <li><a href="sobre.html">Sobre</a></li>
                <li><a href="contato.html">Contato</a></li>
            </ul>
        </nav>
        
        <div class="hamburger">
            <div class="bar"></div>
            <div class="bar"></div>
            <div class="bar"></div>
        </div>
    </header>
    
    <main>
        <section class="hero animated-section snap-full">
          <div class="animated-content">  
            <div class="hero-content">
                <div class="logo-hero">
                    <img src="/assets/logo_hero.png" alt="Spocky Games Logo" class="hero-logo">
                </div>
                <h1 class="glitch" data-text="Spocky Games">Spocky Games</h1>
                <p class="hero-subtitle">Jogos retrô com Mateus Spocky</p>
                <div class="cta-buttons">
                    <a href="https://youtube.com" class="cta-button" target="_blank">Canal no YouTube</a>
                    <a href="loja.html" class="cta-button">Visitar Loja</a>
                </div>
            </div>
          </div>  
        </section>
        

        
        <section class="featured-content animated-section snap-section snap-full">
         <div class="animated-content">  
            <h2 class="section-title">Conteúdo em Destaque</h2>
            <div class="featured-grid">
                <div class="featured-item">
                    <img src="/assets/destaques/stick.png" alt="Conteúdo em Destaque">
                    <h3>Gameplay Retrô</h3>
                    <p>Reviva os clássicos dos videogames!</p>
                </div>
                <div class="featured-item">
                    <img src="/assets/destaques/youtube.png" alt="Conteúdo em Destaque">
                    <h3>Reviews</h3>
                    <p>Análises detalhadas dos jogos que marcaram época.</p>
                </div>
                <div class="featured-item">
                    <img src="/assets/destaques/calendar.png" alt="Conteúdo em Destaque">
                    <h3>Lives todos os dias</h3>
                    <p>Transmissões ao vivo todos os dias a partir das 21hs.</p>
                </div>
            </div>
         </div>   
        </section>
        
        <section class="featured-content animated-section snap-section">
         <div class="animated-content">  
            <h2 class="section-title">Valores</h2>
            <div class="featured-grid">
                <div class="mission">
                    <div class="mission-icon">
                        <i class="fas fa-bullseye"></i>
                    </div>
                    <h3>Nossa Missão</h3>
                    <p>Preservar e compartilhar a história dos videogames, criando conteúdo de qualidade que valorize os jogos clássicos e inspire novas gerações de jogadores.</p>
                </div>
                
                <div class="vision">
                    <div class="vision-icon">
                        <i class="fas fa-eye"></i>
                    </div>
                    <h3>Nossa Visão</h3>
                    <p>Ser o principal canal de referência em jogos retrô no Brasil, construindo uma comunidade apaixonada e engajada em torno da cultura dos videogames clássicos.</p>
                </div>
                
                <div class="values">
                    <div class="values-icon">
                        <i class="fas fa-heart"></i>
                    </div>
                    <h3>Nossos Valores</h3>
                    <p>Autenticidade, paixão, respeito pela história dos games, compartilhamento de conhecimento e valorização da comunidade.</p>
                </div>
            </div>

            </div>
                    <div class="stats-section">
            <div class="stat-item">
                <div class="stat-number">5K+</div>
                <div class="stat-label">Inscritos</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">1100+</div>
                <div class="stat-label">Vídeos</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">1M+</div>
                <div class="stat-label">Visualizações</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">3</div>
                <div class="stat-label">Anos de Canal</div>
            </div>
          </div>
        </section>
        



        <section class="latest-videos animated-section snap-section snap-full">
          <div class="animated-content">  
            <h2 class="section-title">Últimos Vídeos</h2>
            <div class="video-grid">
                <a href="https://youtu.be/rQ3bM_zXhro" target="_blank">
    <div class="video-card">
        <div class="video-thumbnail">
            <img src="/assets/destaques/video1.png" alt="Thumbnail do vídeo">
            <div class="play-button">
                <i class="fas fa-play"></i>
            </div>
        </div>
        <h3>Resident Evil: Code Veronica X</h3>
        <p>Publicado em 15/05/2025</p>
    </div>
</a>

<a href="https://www.youtube.com/watch?v=MkAq6ATwoZY" target="_blank">
    <div class="video-card">
        <div class="video-thumbnail">
            <img src="/assets/destaques/video2.png" alt="Thumbnail do vídeo">
            <div class="play-button">
                <i class="fas fa-play"></i>
            </div>
        </div>
        <h3>Hyper Live Noturna</h3>
        <p>Publicado em 14/05/2025</p>
    </div>
</a>

<a href="https://www.youtube.com/watch?v=SWd9Ww-aTrM" target="_blank">
    <div class="video-card">
        <div class="video-thumbnail">
            <img src="/assets/destaques/video3.png" alt="Thumbnail do vídeo">
            <div class="play-button">
                <i class="fas fa-play"></i>
            </div>
        </div>
        <h3>O Revolucionário Playstation!</h3>
        <p>Publicado em 12/05/2025</p>
    </div>
</a>
            </div>
            <div class="center-button">
                <a href="https://www.youtube.com/@SpockyGames" target="_blank" class="neon-button">Ir para o Canal no YouTube</a>
            </div>
          </div>  
        </section>
    </main>

    

  <section class="parceiros-carroussel snap-section">
    <div class="carousel-container">
      <div class="carousel-track">
        <div class="carousel-slide">
          <img src="/assets/images/partnerlogos/ecast.png" alt="E-Cast" data-link="https://www.ecast.site">
        </div>
        <div class="carousel-slide">
          <img src="/assets/images/partnerlogos/entretonic.png" alt="Entretonic" data-link="https://instagram.com/entretonic">
        </div>
      <div class="carousel-slide">
        <img src="/assets/images/partnerlogos/sejaumpatrocinador.png" alt="Entretonic" data-link="contato.html">
      </div>
      </div>
    </div>
  </section>

  <footer>
    <div class="footer-content">
      <p>&copy; 2025 Spocky Games. Todos os direitos reservados.</p>
      <div class="social-icons">
        <a href="https://youtube.com/@SpockyGames" target="_blank" class="social-icon youtube">
          <i class="fab fa-youtube"></i>
        </a>
        <a href="https://instagram.com/SpockyGames" target="_blank" class="social-icon instagram">
          <i class="fab fa-instagram"></i>
        </a>
        <a href="https://www.tiktok.com/@spockygames" target="_blank" class="social-icon tiktok">
          <i class="fab fa-tiktok"></i>
        </a>
        <a href="https://discord.com/invite/5Zags8Xaz5" target="_blank" class="social-icon discord">
          <i class="fab fa-discord"></i>
        </a>
      </div>
    </div>
  </footer>


    
    <script src="/assets/js/script.js"></script>


</body>
</html>






/* Base Styles */
:root {
  --primary-color: #be1c39;
  --secondary-color: #00b7bd;
  --accent-color: #bcb704;
  --text-color: #ffffff;
  --bg-color: #0a0a0a;
  --card-bg-color: rgba(190, 28, 58, 0.336);
  --border-color: rgba(255, 255, 255, 0.1);
  --header-height: 80px;
  --glow-shadow: 0 0 15px rgba(190, 28, 57, 0.7);
  --cyan-glow: 0 0 15px rgba(0, 183, 189, 0.979);
  --yellow-glow: 0 0 15px rgba(188, 183, 4, 0.7);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  background-color: #000000;
  color: var(--text-color);
  line-height: 1.6;
  overflow-x: hidden;
}

body.no-scroll {
  overflow: hidden;
}

html, body {
  height: 100%;
  scroll-snap-type: y proximity; /* mais leve */
  scroll-behavior: smooth;
  margin: 0;
  padding: 0;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

a {
  text-decoration: none;
  color: var(--text-color);
  transition: all 0.3s ease;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
}

.background-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  opacity: 75%;
  z-index: -9999;
}

/* Navbar */
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: var(--header-height);
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 5%;
  background-color: rgba(10, 10, 10, 0.9);
  backdrop-filter: blur(10px);
  z-index: 1000;
  border-bottom: 1px solid var(--border-color);
  transition: transform 0.3s ease;
}

.navbar.hidden {
  transform: translateY(-100%);
}

.logo-container {
  display: flex;
  align-items: center;
  gap: 15px;
}

.logo {
  width: 50px;
  height: 50px;
  transition: all 0.3s ease;
}

.site-title {
  font-size: 1.5rem;
  font-weight: 700;
  background: linear-gradient(90deg, #ffffff, #fdfdfd);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.nav-links ul {
  display: flex;
  gap: 20px;
}

.nav-links a {
  position: relative;
  padding: 8px 12px;
  font-weight: 500;
}

.nav-links a::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
  transition: width 0.3s ease;
}

.nav-links a:hover::after {
  width: 100%;
}

.nav-links a.active {
  position: relative;
  z-index: 1;
  outline: none;
}

.nav-links a.active::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 12px;
  padding: 2px;
  background: linear-gradient(270deg, var(--primary-color), var(--secondary-color), var(--primary-color));
  background-size: 600% 600%;
  animation: gradientBorder 4s ease infinite;
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;
  pointer-events: none;
  z-index: -1;
}

@keyframes gradientBorder {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Remove o contorno azul ao clicar */
.nav-links a:focus {
  outline: none;
}



.hamburger {
  display: none;
  flex-direction: column;
  cursor: pointer;
  z-index: 1001;
}

.bar {
  width: 30px;
  height: 3px;
  background-color: var(--text-color);
  margin: 3px 0;
  transition: all 0.3s ease;
}

@media (max-width: 768px) {
  .nav-links ul {
    flex-direction: column;
    gap: 2px; /* Reduzido de 20px para 5px */
    align-items: flex-start; /* opcional: alinha os itens à esquerda */
  }
}



/* Main Content */
main {
  padding-top: var(--header-height);
  min-height: 100vh;
}

/* Hero Section */
.hero {
  height: calc(100vh - var(--header-height));
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 0 5%;
  background-image: url('/assets/images/bg-site.jpg');
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
}
.hero-content {
  max-width: 800px;
}

.logo-hero {
  margin-bottom: 30px;
}

.hero-logo {
  width: 250px;
  height: 250px;
  transition: all 0.3s ease;
  
}

.hero-logo:hover {
  transform: scale(1.1);
  filter: drop-shadow(0 0 15px var(--primary-color));
}

.glitch {
  font-size: 4rem;
  font-weight: 700;
  text-transform: uppercase;
  position: relative;
  text-shadow: 0.03em 0 0 #8f1dc3, -0.03em 0 0 #1e20c2;
  animation: glitch 1s infinite;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch::before {
  left: 1px;
  text-shadow: -1px 0 #bd1b3a;
  animation: glitch-1 0.8s infinite;
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
}

.glitch::after {
  left: -1px;
  text-shadow: -1px 0 #8f1dc3;
  animation: glitch-2 0.8s infinite;
  clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
}

@keyframes glitch {
  0% {
    text-shadow: 0.05em 0 0 #8f1dc3, -0.05em 0 0 #bd1b3a;
  }
  14% {
    text-shadow: 0.05em 0 0 #8f1dc3, -0.05em 0 0 #bd1b3a;
  }
  15% {
    text-shadow: -0.05em -0.025em 0 #8f1dc3, 0.025em 0.05em 0 #bd1b3a;
  }
  49% {
    text-shadow: -0.05em -0.025em 0 #8f1dc3, 0.025em 0.05em 0 #bd1b3a;
  }
  50% {
    text-shadow: 0.025em 0.05em 0 #8f1dc3, -0.05em -0.025em 0 #bd1b3a;
  }
  99% {
    text-shadow: 0.025em 0.05em 0 #8f1dc3, -0.05em -0.025em 0 #bd1b3a;
  }
  100% {
    text-shadow: 0.05em 0 0 #8f1dc3, -0.05em 0 0 #bd1b3a;
  }
}

@keyframes glitch-1 {
  0% {
    transform: translateX(0);
  }
  80% {
    transform: translateX(0);
  }
  85% {
    transform: translateX(2px);
  }
  90% {
    transform: translateX(-2px);
  }
  95% {
    transform: translateX(2px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes glitch-2 {
  0% {
    transform: translateX(0);
  }
  80% {
    transform: translateX(0);
  }
  85% {
    transform: translateX(-2px);
  }
  90% {
    transform: translateX(2px);
  }
  95% {
    transform: translateX(-2px);
  }
  100% {
    transform: translateX(0);
  }
}

.hero-subtitle {
  font-size: 1.5rem;
  margin-bottom: 30px;
  color: rgba(255, 255, 255, 0.8);
}

.cta-buttons {
  display: flex;
  justify-content: center;
  gap: 20px;
}

.cta-button {
  padding: 12px 30px;
  background-color: #000000d3;
  border: 2px solid var(--primary-color);
  color: var(--text-color);
  font-weight: 600;
  border-radius: 5px;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.cta-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(190, 28, 57, 0.4), transparent);
  transition: all 0.5s ease;
  z-index: -1;
}

.cta-button:hover {
  box-shadow: 0 0 15px rgba(190, 28, 57, 0.7);
  transform: translateY(-3px);
}

.cta-button:hover::before {
  left: 100%;
}

/* Section Styles */
.section-title {
  font-size: 2.5rem;
  margin-bottom: 50px;
  text-align: center;
  position: relative;
  display: inline-block;
}

.section-title::after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 100px;
  height: 3px;
  background: linear-gradient(90deg, var(--primary-color), var(--text-color));
}

.featured-content,
.latest-videos {
  padding: 80px 5%;
  text-align: center;
}

.featured-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Adapta melhor a largura */
    gap: 30px;
    margin-top: 50px;
    justify-content: center; /* Mantém os itens centralizados na horizontal */
    align-items: center; /* Garante alinhamento vertical correto */
    max-width: 80vw; /* Define um limite de largura */
    margin-left: auto;
    margin-right: auto;
}


.featured-item {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  padding: 30px;
  border: 1.5px solid var(--border-color);
  transition: all 0.3s ease;
  backdrop-filter: blur(4px) !important;

}

.featured-item:hover {
  transform: translateY(-10px);
  box-shadow: var(--glow-shadow);
  border-color: 2px solid var(--primary-color);
    backdrop-filter: blur(4px) !important;
}

.featured-item img {
  border-radius: 5px;
  margin-bottom: 20px;
}

.featured-item h3 {
  font-size: 1.5rem;
  margin-bottom: 10px;
}

.featured-item p {
  color: rgba(255, 255, 255, 0.8);
}

.video-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Ajuste automático das colunas */
    gap: 30px;
    margin-top: 50px;
    justify-content: center; /* Centraliza os itens na horizontal */
    align-items: center; /* Mantém alinhamento vertical correto */
    max-width: 80vw; /* Define um limite para evitar que ocupe toda a tela */
    margin-left: auto;
    margin-right: auto;
}


.video-card {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  overflow: hidden;
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
  backdrop-filter: blur(4px) !important;

}

.video-card:hover {
  transform: translateY(-10px);
  box-shadow: var(--glow-shadow);
  border-color: var(--primary-color);
}

.video-thumbnail {
  position: relative;
  overflow: hidden;
}

.video-thumbnail img {
  width: 100%;
  transition: all 0.3s ease;
}

.video-card:hover .video-thumbnail img {
  transform: scale(1.05);
}

.play-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 60px;
  height: 60px;
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  color: var(--primary-color);
  opacity: 0;
  transition: all 0.3s ease;
}

.video-card:hover .play-button {
  opacity: 1;
}

.video-card h3 {
  font-size: 1.2rem;
  padding: 15px 15px 5px;
}

.video-card p {
  color: rgba(255, 255, 255, 0.7);
  padding: 0 15px 15px;
  font-size: 0.9rem;
}

.center-button {
  margin-top: 50px;
}

.neon-button {
  padding: 12px 30px;
  background-color: #0000006b;
  border: 2px solid var(--primary-color);
  color: var(--text-color);
  font-weight: 600;
  border-radius: 5px;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  z-index: 3;
  cursor: pointer;
  clip-path: inset(0 0 0 0); /* Adicione essa linha */
}

.neon-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(190, 28, 57, 0.4), transparent);
  transition: all 0.5s ease;
  z-index: 2;
}

.neon-button:hover {
  box-shadow: 0 0 15px rgba(190, 28, 57, 0.7);
  transform: translateY(-3px);
}

.neon-button:hover::before {
  left: 100%;
}

.neon-button.secondary {
  border-color: var(--secondary-color);
}

.neon-button.secondary:hover {
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.7);
}

.neon-button.secondary::before {
  background: linear-gradient(90deg, transparent, rgba(0, 255, 255, 0.4), transparent);
}

/* Page Header */
.page-header {
  scroll-margin-top: var(--header-height); /* ⚠️ chave para snap */
  padding: 80px 5% 50px;
  text-align: center;
  background-image: url('/assets/images/bg-site.jpg');
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
}


.page-header h1 {
  margin-bottom: 10px;
}

.page-header p {
  color: rgba(255, 255, 255, 0.8);
  font-size: 1.2rem;
}

/* Store Section */
.store-section {
  padding: 50px 5%;
}

.filter-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 50px;
  flex-wrap: wrap;
  gap: 20px;
}

.filter-group {
  display: flex;
  align-items: center;
  gap: 10px;
}

.filter-group label {
  font-weight: 500;
}

.filter-group select {
  padding: 8px 15px;
  background-color: rgba(30, 30, 30, 0.8);
  border: 1px solid var(--border-color);
  color: var(--text-color);
  border-radius: 5px;
}

.search-bar {
  display: flex;
  align-items: center;
}

.search-bar input {
  padding: 8px 15px;
  background-color: rgba(30, 30, 30, 0.8);
  border: 1px solid var(--border-color);
  color: var(--text-color);
  border-radius: 5px 0 0 5px;
  width: 250px;
}

.search-bar button {
  padding: 8px 15px;
  background-color: var(--primary-color);
  border: none;
  color: var(--text-color);
  border-radius: 0 5px 5px 0;
  cursor: pointer;
}

.products-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 30px;
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: 40px 20px;
}

.product-card {
  background-color: var(--card-bg-color); /* deve conter transparência (ex: rgba(..., 0.2)) */
  border-radius: 10px;
  overflow: hidden;
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px); /* suporte para Safari */
}

.product-card:hover {
  transform: translateY(-10px);
  box-shadow: var(--glow-shadow);
  border-color: var(--primary-color);
}

.product-image {
  position: relative;
  overflow: hidden;
}

.product-image img {
  width: 100%;
  transition: all 0.3s ease;
  display: block;
}

.product-card:hover .product-image img {
  transform: scale(1.05);
}

.product-tag {
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 5px 10px;
  background-color: var(--primary-color);
  color: var(--text-color);
  font-size: 0.8rem;
  font-weight: 600;
  border-radius: 3px;
}

.product-info {
  padding: 20px;
}

.product-info h3 {
  font-size: 1.2rem;
  margin-bottom: 10px;
}

.product-description {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 15px;
  font-size: 0.9rem;
}

.product-price {
  font-size: 1.2rem;
  font-weight: 700;
  margin-bottom: 15px;
  color: #3bc81c;
}

.old-price {
  text-decoration: line-through;
  color: rgba(255, 255, 255, 0.5);
  margin-right: 10px;
  font-size: 1rem;
}


.pagination {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin-top: 50px;
}

.pagination a {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  background-color: rgba(0, 0, 0, 0.8);
  border: 1px solid var(--border-color);
  border-radius: 5px;
  transition: all 0.3s ease;
}

.pagination a.active {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}

.pagination a:hover {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}

.pagination a.next {
  width: auto;
  padding: 0 15px;
}

/* Live Section */
.live-section {
  padding: 50px 5%;
}

.live-container {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  overflow: hidden;
  border: 1px solid var(--border-color);
  margin-bottom: 50px;
}

.live-player-placeholder {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 56.25%;
  background-color: #000;
}

.live-status {
  position: absolute;
  top: 20px;
  left: 20px;
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 5px 15px;
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 20px;
  z-index: 1;
}

.live-indicator {
  width: 10px;
  height: 10px;
  background-color: #ff0000;
  border-radius: 50%;
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.7;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.live-placeholder-content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: rgba(255, 255, 255, 0.7);
}

.live-placeholder-content i {
  font-size: 4rem;
  margin-bottom: 20px;
  color: var(--primary-color);
}

.live-info {
  padding: 30px;
}

.live-info h2 {
  font-size: 1.8rem;
  margin-bottom: 15px;
}

.live-description {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 20px;
}

.live-meta {
  display: flex;
  gap: 20px;
  margin-bottom: 20px;
}

.live-viewers,
.live-started {
  display: flex;
  align-items: center;
  gap: 10px;
  color: rgba(255, 255, 255, 0.7);
}

.live-buttons {
  display: flex;
  gap: 15px;
}

.schedule-section {
  margin-top: 50px;
}

.schedule-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 20px;
  margin-top: 30px;
}

.schedule-item {
  display: flex;
  align-items: center;
  gap: 20px;
  background-color: var(--card-bg-color);
  border-radius: 10px;
  padding: 20px;
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
}

.schedule-item:hover {
  transform: translateY(-5px);
  box-shadow: var(--glow-shadow);
  border-color: var(--primary-color);
}

.schedule-date {
  text-align: center;
  min-width: 60px;
}

.schedule-date .day {
  font-size: 1.8rem;
  font-weight: 700;
  color: var(--primary-color);
}

.schedule-date .month {
  font-size: 0.9rem;
  color: rgba(255, 255, 255, 0.7);
}

.schedule-info {
  flex: 1;
}

.schedule-info h3 {
  font-size: 1.2rem;
  margin-bottom: 5px;
}

.schedule-info p {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.9rem;
  margin-bottom: 10px;
}

.schedule-time {
  display: flex;
  align-items: center;
  gap: 10px;
  color: var(--secondary-color);
  font-size: 0.9rem;
}

.reminder-button {
  background-color: #000;
  border: 1px solid var(--secondary-color);
  color: var(--secondary-color);
  padding: 8px 15px;
  border-radius: 5px;
  display: flex;
  align-items: center;
  gap: 10px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.reminder-button:hover {
  background-color: rgba(0, 255, 255, 0.445);
  box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
}

/* On Demand Section */
.ondemand-section {
  padding: 50px 5%;
}

.video-player-container {
  margin-bottom: 50px;
}

.video-player-placeholder {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 56.25%;
  background-color: #000;
  border-radius: 10px;
  overflow: hidden;
}

.video-placeholder-content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: rgba(255, 255, 255, 0.7);
}

.video-placeholder-content i {
  font-size: 4rem;
  margin-bottom: 20px;
  color: var(--primary-color);
}

.video-duration {
  position: absolute;
  bottom: 10px;
  right: 10px;
  padding: 3px 8px;
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 3px;
  font-size: 0.8rem;
}

.video-info {
  padding: 15px;
}

.video-meta {
  display: flex;
  justify-content: space-between;
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.8rem;
  margin: 5px 0 10px;
}

.video-description {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.9rem;
}

/* News Section */
.news-section {
  padding: 50px 5%;
}

.news-filter {
  display: flex;
  justify-content: center;
  gap: 15px;
  margin-bottom: 50px;
  flex-wrap: wrap;
}

.filter-button {
  padding: 8px 20px;
  background-color: #000;
  border: 1px solid var(--border-color);
  color: var(--text-color);
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.filter-button:hover {
  border-color: var(--primary-color);
  background-color: rgb(95, 25, 39);
}

.filter-button.active {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}

.news-grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 30px;
}

.news-card {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  overflow: hidden;
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
  grid-column: span 4;
}

.news-card.featured {
  grid-column: span 12;
  display: flex;
  flex-direction: column;
}

@media (min-width: 992px) {
  .news-card.featured {
    flex-direction: row;
  }

  .news-card.featured .news-image {
    width: 60%;
  }

  .news-card.featured .news-content {
    width: 40%;
  }
}

.news-card:hover {
  transform: translateY(-10px);
  box-shadow: var(--glow-shadow);
  border-color: var(--primary-color);
}

.news-image {
  position: relative;
  overflow: hidden;
}

.news-image img {
  width: 100%;
  transition: all 0.3s ease;
}

.news-card:hover .news-image img {
  transform: scale(1.05);
}

.news-tag {
  position: absolute;
  top: 10px;
  left: 10px;
  padding: 5px 10px;
  background-color: var(--primary-color);
  color: var(--text-color);
  font-size: 0.8rem;
  font-weight: 600;
  border-radius: 3px;
}

.news-content {
  padding: 20px;
}

.news-date {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.9rem;
  margin-bottom: 10px;
}

.news-card.featured h2 {
  font-size: 1.8rem;
  margin-bottom: 15px;
}

.news-card h3 {
  font-size: 1.3rem;
  margin-bottom: 10px;
}

.news-excerpt {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 15px;
  font-size: 0.9rem;
}

.read-more {
  display: inline-flex;
  align-items: center;
  gap: 10px;
  color: var(--secondary-color);
  font-weight: 500;
  transition: all 0.3s ease;
}

.read-more:hover {
  color: var(--primary-color);
}

.newsletter-section {
  padding: 80px 5%;
}

.newsletter-container {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  padding: 50px;
  text-align: center;
  border: 1px solid var(--border-color);
  background-image: linear-gradient(135deg, rgba(216, 19, 57, 0.1), rgba(0, 255, 255, 0.1));
}

.newsletter-content h2 {
  font-size: 2rem;
  margin-bottom: 20px;
}

.newsletter-content p {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 30px;
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
}

.newsletter-form {
  display: flex;
  max-width: 600px;
  margin: 0 auto;
}

.newsletter-form input {
  flex: 1;
  padding: 15px;
  background-color: rgba(30, 30, 30, 0.8);
  border: 1px solid var(--border-color);
  color: var(--text-color);
  border-radius: 5px 0 0 5px;
}

.newsletter-form button {
  padding: 15px 30px;
  border-radius: 0 5px 5px 0;
}

/* Partners Section */
.partners-section {
  padding: 50px 5%;
  text-align: center;
}

.partners-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Ajuste dinâmico das colunas */
    gap: 30px;
    margin-top: 50px;
    justify-content: center; /* Centraliza os elementos horizontalmente */
    align-items: center; /* Garante alinhamento vertical correto */
    max-width: 80vw; /* Limita a largura para evitar que se espalhem demais */
    margin-left: auto;
    margin-right: auto;
}


.partner-card {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  padding: 30px;
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
  backdrop-filter: blur(4px) !important;
}

.partner-card:hover {
  transform: translateY(-10px);
  box-shadow: var(--glow-shadow);
  border-color: var(--primary-color);
}

.partner-logo {
  width: 100%;
  max-width: 250px; /* Aumentado de 200px para 250px */
  aspect-ratio: 5 / 3;
  margin: 0 auto 20px;
  overflow: hidden;
  border-radius: 10px;
  border: 3px solid var(--primary-color);
  transition: all 0.3s ease;
}

.partner-card:hover .partner-logo {
  transform: scale(1.05);
  box-shadow: var(--glow-shadow);
}

.partner-logo img {
  width: 100%;
  height: 100%;
  object-fit: cover; /* Use 'contain' se quiser ver tudo da imagem mesmo com bordas */
}

.partner-card h3 {
  font-size: 1.5rem;
  margin-bottom: 5px;
}

.partner-category {
  color: var(--secondary-color);
  font-size: 0.9rem;
  margin-bottom: 15px;
}

.partner-description {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 20px;
  font-size: 0.9rem;
}


.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2000;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
}

.modal-overlay.active {
  opacity: 1;
  visibility: visible;
}

.partner-modal {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  width: 90%;
  max-width: 800px;
  max-height: 90vh;
  overflow-y: auto;
  position: relative;
  border: 1px solid var(--border-color);
  transform: translateY(50px);
  transition: all 0.3s ease;
}

.modal-overlay.active .partner-modal {
  transform: translateY(0);
}

.close-modal {
  position: absolute;
  top: 20px;
  right: 20px;
  background: none;
  border: none;
  color: var(--text-color);
  font-size: 1.5rem;
  cursor: pointer;
  z-index: 1;
}

.modal-content {
  padding: 30px;
}

.modal-header {
  display: flex;
  align-items: center;
  gap: 30px;
  margin-bottom: 30px;
}

.modal-logo {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  overflow: hidden;
  border: 3px solid var(--primary-color);
}

.modal-logo img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.modal-title h2 {
  font-size: 2rem;
  margin-bottom: 10px;
}

.modal-category {
  color: var(--secondary-color);
  font-size: 1rem;
}

.modal-description {
  margin-bottom: 30px;
}

.modal-description h3 {
  font-size: 1.5rem;
  margin-bottom: 15px;
}

.modal-description p {
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.8;
}

.modal-info {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 20px;
  margin-bottom: 30px;
}

.info-item {
  display: flex;
  align-items: center;
  gap: 15px;
}

.modal-social h3 {
  font-size: 1.5rem;
  margin-bottom: 15px;
}

.modal-social-icons {
  display: flex;
  gap: 15px;
  margin-bottom: 30px;
}

.social-icon {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(30, 30, 30, 0.8);
  transition: all 0.3s ease;
  font-size: 1.2rem;
}

.social-icon:hover {
  transform: translateY(-5px) scale(1.1);
}

.social-icon.youtube {
  color: #ff0000;
  border: 2px solid #ff0000;
}

.social-icon.youtube:hover {
  background-color: #ff0000;
  color: #fff;
  box-shadow: 0 0 15px rgba(255, 0, 0, 0.7);
}

.social-icon.discord {
  color: #7289da;
  border: 2px solid #7289da;
}

.social-icon.discord:hover {
  background-color: #7289da;
  color: #fff;
  box-shadow: 0 0 15px rgba(114, 137, 218, 0.7);
}

.social-icon.instagram {
  color: #e1306c;
  border: 2px solid #e1306c;
}

.social-icon.instagram:hover {
  background-color: #e1306c;
  color: #fff;
  box-shadow: 0 0 15px rgba(225, 48, 108, 0.7);
}

.social-icon.twitter {
  color: #1da1f2;
  border: 2px solid #1da1f2;
}

.social-icon.twitter:hover {
  background-color: #1da1f2;
  color: #fff;
  box-shadow: 0 0 15px rgba(29, 161, 242, 0.7);
}

.social-icon.facebook {
  color: #1877f2;
  border: 2px solid #1877f2;
}

.social-icon.facebook:hover {
  background-color: #1877f2;
  color: #fff;
  box-shadow: 0 0 15px rgba(24, 119, 242, 0.7);
}

.social-icon.twitch {
  color: #9146ff;
  border: 2px solid #9146ff;
}

.social-icon.twitch:hover {
  background-color: #9146ff;
  color: #fff;
  box-shadow: 0 0 15px rgba(145, 70, 255, 0.7);
}

.social-icon.linkedin {
  color: #0077b5;
  border: 2px solid #0077b5;
}

.social-icon.linkedin:hover {
  background-color: #0077b5;
  color: #fff;
  box-shadow: 0 0 15px rgba(0, 119, 181, 0.7);
}

.social-icon.behance {
  color: #1769ff;
  border: 2px solid #1769ff;
}

.social-icon.behance:hover {
  background-color: #1769ff;
  color: #fff;
  box-shadow: 0 0 15px rgba(23, 105, 255, 0.7);
}

.social-icon.vimeo {
  color: #1ab7ea;
  border: 2px solid #1ab7ea;
}

.social-icon.vimeo:hover {
  background-color: #1ab7ea;
  color: #fff;
  box-shadow: 0 0 15px rgba(26, 183, 234, 0.7);
}

.social-icon.soundcloud {
  color: #ff8800;
  border: 2px solid #ff8800;
}

.social-icon.soundcloud:hover {
  background-color: #ff8800;
  color: #fff;
  box-shadow: 0 0 15px rgba(255, 136, 0, 0.7);
}

.social-icon.spotify {
  color: #1db954;
  border: 2px solid #1db954;
}

.social-icon.spotify:hover {
  background-color: #1db954;
  color: #fff;
  box-shadow: 0 0 15px rgba(29, 185, 84, 0.7);
}

.social-icon.mixcloud {
  color: #52aad8;
  border: 2px solid #52aad8;
}

.social-icon.mixcloud:hover {
  background-color: #52aad8;
  color: #fff;
  box-shadow: 0 0 15px rgba(82, 170, 216, 0.7);
}

.social-icon.tiktok {
  color: #ee1d52;
  border: 2px solid #ee1d52;
}

.social-icon.tiktok:hover {
  background-color: #ee1d52;
  color: #fff;
  box-shadow: 0 0 15px rgba(238, 29, 82, 0.7);
}

.modal-cta {
  text-align: center;
}

/* Team Section */
/* Team Section */
.team-section {
  padding: 80px 5%;
  text-align: center;
}

.team-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 30px;
  margin-top: 50px;
  justify-content: center;
  align-items: stretch;

  /* Permite até 4 cards de 300px + 3 gaps de 30px = 1290px */
  max-width: calc(4 * 300px + 3 * 30px);
  margin-left: auto;
  margin-right: auto;
}

.team-card {
  background-color: #1eb0bd56;
  border-radius: 10px;
  overflow: hidden;
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
  backdrop-filter: blur(4px) !important;

  flex: 1 1 300px;
  max-width: 300px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}

/* Quebra para 2 por linha em telas menores */
@media (max-width: 992px) {
  .team-card {
    flex: 1 1 calc(50% - 15px);
    max-width: calc(50% - 15px);
  }
}

/* Quebra para 1 por linha em telas pequenas */
@media (max-width: 600px) {
  .team-card {
    flex: 1 1 100%;
    max-width: 100%;
  }
}

/* Hover Effects */
.team-card:hover {
  transform: translateY(-10px);
  box-shadow: var(--cyan-glow);
  border-color: var(--secondary-color);
}

/* Avatar */
.team-avatar {
  width: 200px;
  height: 200px;
  margin: 30px auto;
  border-radius: 50%;
  overflow: hidden;
  border: 3px solid var(--secondary-color);
  transition: all 0.3s ease;
}

.team-card:hover .team-avatar {
  transform: scale(1.05);
  box-shadow: var(--cyan-glow);
}

.team-avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Text content */
.team-info {
  padding: 0 20px 30px;
}

.team-info h3 {
  font-size: 1.5rem;
  margin-bottom: 5px;
}

.team-role {
  color: var(--secondary-color);
  font-size: 0.9rem;
  margin-bottom: 15px;
}

.team-description {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 20px;
  font-size: 0.9rem;
}

.team-social {
  display: flex;
  justify-content: center;
  gap: 15px;
}


/* Hover Effects */
.team-card:hover {
  transform: translateY(-10px);
  box-shadow: var(--cyan-glow);
  border-color: var(--secondary-color);
}

/* Avatar */
.team-avatar {
  width: 200px;
  height: 200px;
  margin: 30px auto;
  border-radius: 50%;
  overflow: hidden;
  border: 3px solid var(--secondary-color);
  transition: all 0.3s ease;
}

.team-card:hover .team-avatar {
  transform: scale(1.05);
  box-shadow: var(--cyan-glow);
}

.team-avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Text content */
.team-info {
  padding: 0 20px 30px;
}

.team-info h3 {
  font-size: 1.5rem;
  margin-bottom: 5px;
}

.team-role {
  color: var(--secondary-color);
  font-size: 0.9rem;
  margin-bottom: 15px;
}

.team-description {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 20px;
  font-size: 0.9rem;
}

.team-social {
  display: flex;
  justify-content: center;
  gap: 15px;
}


.become-partner {
  padding: 50px 5%;
}

.partner-cta {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  padding: 50px;
  text-align: center;
  border: 1px solid var(--border-color);
  backdrop-filter: blur(4px) !important;

}

.partner-cta h2 {
  font-size: 2rem;
  margin-bottom: 20px;
}

.partner-cta p {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 30px;
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
}

/* About Section */
.about-section {
  padding: 50px 5%;
}

.about-intro {
  display: flex;
  flex-direction: column;
  gap: 30px;
  margin-bottom: 80px;
}

@media (min-width: 992px) {
  .about-intro {
    flex-direction: row;
    align-items: center;
  }

  .about-image {
    width: 40%;
  }

  .about-content {
    width: 60%;
  }
}

.about-image {
  border-radius: 10px;
  overflow: hidden;
  border: 3px solid var(--primary-color);
  box-shadow: var(--glow-shadow);
}

.about-content h2 {
  font-size: 2rem;
  margin-bottom: 20px;
}

.about-content p {
  color: rgba(255, 255, 255, 0.9);
  margin-bottom: 15px;
  line-height: 1.8;
}

.timeline {
  margin-bottom: 80px;
  text-align: center;
}

.timeline-container {
  position: relative;
  max-width: 1000px;
  margin: 50px auto 0;
}

.timeline-container::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 50%;
  width: 3px;
  background: linear-gradient(to bottom, var(--primary-color), #fff);
  transform: translateX(-50%);
}

.timeline-item {
  position: relative;
  width: 50%;
  padding: 20px 40px;
  z-index: 1;
}

.timeline-item:nth-child(odd) {
  left: 0;
  text-align: right;
}

.timeline-item:nth-child(even) {
  left: 50%;
  text-align: left;
}

.timeline-dot {
  position: absolute;
  width: 20px;
  height: 20px;
  background-color: var(--primary-color);
  border-radius: 50%;
  top: 30px;
  z-index: 2;
}

.timeline-item:nth-child(odd) .timeline-dot {
  right: -10px;
}

.timeline-item:nth-child(even) .timeline-dot {
  left: -10px;
}

.timeline-date {
  position: absolute;
  top: 30px;
  font-size: 1.2rem;
  font-weight: 700;
  color: var(--secondary-color);
}

.timeline-item:nth-child(odd) .timeline-date {
  right: -100px;
}

.timeline-item:nth-child(even) .timeline-date {
  left: -100px;
}

.timeline-content {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  padding: 20px;
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
  backdrop-filter: blur(4px) !important;

}

.timeline-content:hover {
  transform: translateY(-5px);
  box-shadow: var(--glow-shadow);
  border-color: var(--primary-color);
}

.timeline-content h3 {
  font-size: 1.5rem;
  margin-bottom: 10px;
}

.timeline-content p {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 15px;
}

.timeline-content img {
  width: 100%;
  border-radius: 5px;
}


@media (max-width: 768px) {
  .timeline-container {
    max-width: 90%;
    margin: 20px auto 0;
  }
  .timeline-item {
    width: 100%;
    padding: 10px 20px;
  }
  .timeline-item:nth-child(odd) {
    left: 0;
    text-align: left;
  }
  .timeline-item:nth-child(even) {
    left: 0;
    text-align: left;
  }
  .timeline-dot {
    top: 20px;
  }
  .timeline-date {
    top: 20px;
  }
  .timeline-content {
    padding: 10px;
  }
}

@media (max-width: 480px) {
  .timeline-container {
    max-width: 80%;
    margin: 10px auto 0;
  }
  .timeline-item {
    padding: 5px 10px;
  }
  .timeline-dot {
    top: 15px;
  }
  .timeline-date {
    top: 15px;
  }
  .timeline-content {
    padding: 5px;
    width: 140%;
  }
}



.about-dj {
  margin-bottom: 80px;
  text-align: center;
}

.dj-content {
  display: flex;
  flex-direction: column;
  gap: 30px;
  margin-top: 50px;
}

@media (min-width: 992px) {
  .dj-content {
    flex-direction: row;
    align-items: center;
  }

  .dj-image {
    width: 50%;
  }

  .dj-text {
    width: 50%;
    text-align: left;
  }
}

.dj-image {
  border-radius: 10px;
  overflow: hidden;
  border: 3px solid var(--secondary-color);
  box-shadow: var(--cyan-glow);
}

.dj-text p {
  color: rgba(255, 255, 255, 0.9);
  margin-bottom: 15px;
  line-height: 1.8;
}

.dj-social {
  display: flex;
  gap: 15px;
  margin-top: 20px;
}

.mission-vision {
    display: flex;
    justify-content: center; /* Mantém os itens centralizados */
    align-items: stretch; /* Garante altura uniforme */
    gap: 20px;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 40px 20px;
}


.mission,
.vision,
.values {
    flex: 1; /* Faz com que todos os blocos tenham o mesmo tamanho */
    min-width: 300px; /* Garante que não fiquem muito pequenos */
    background-color: rgba(32, 113, 160, 0.5); /* Fundo transparente */
    border-radius: 10px;
    padding: 30px;
    text-align: center;
    border: 1px solid #1dafba4f;
    transition: all 0.3s ease;
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
}

.mission:hover,
.vision:hover,
.values:hover {
    transform: translateY(-10px);
    box-shadow: var(--cyan-glow);
}

.mission:hover { border-color: var(--secondary-color); }
.vision:hover { border-color: var(--secondary-color); }
.values:hover { border-color: var(--secondary-color); }

.mission-icon,
.vision-icon,
.values-icon {
    font-size: 3rem;
    margin-bottom: 20px;
}

.mission h3,
.vision h3,
.values h3 {
    font-size: 1.5rem;
    margin-bottom: 15px;
}

.mission p,
.vision p,
.values p {
    color: rgba(255, 255, 255, 0.8);
}

/* Responsividade */
@media (max-width: 900px) {
    .mission-vision {
        flex-wrap: wrap;
        justify-content: center;
    }

    .mission,
    .vision,
    .values {
        flex: 1 1 calc(50% - 20px); /* 2 por linha */
    }
}

@media (max-width: 600px) {
    .mission,
    .vision,
    .values {
        flex: 1 1 100%; /* Um por linha */
    }
}


.stats-section {
    display: flex; /* Usa flexbox para distribuir os itens */
    justify-content: space-between; /* Espaçamento uniforme entre os itens */
    align-items: stretch; /* Mantém todos os itens com a mesma altura */
    gap: 20px;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 80px 5%;
    flex-wrap: wrap; /* Permite que os itens quebrem de linha quando necessário */
}

.stat-item {
    flex: 1; /* Garante tamanhos iguais */
    min-width: 220px; /* Define um tamanho mínimo para evitar itens muito pequenos */
    background-color: #bcb60467; /* Mantém a transparência */
    border-radius: 10px;
    padding: 30px;
    text-align: center;
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
}

.stat-item:hover {
    transform: translateY(-10px);
    border-color: var(--accent-color);
    box-shadow: var(--yellow-glow);
}

.stat-number {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 10px;
    background: linear-gradient(90deg, var(--secondary-color), var(--secondary-color));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.stat-label {
    color: rgba(255, 255, 255, 0.8);
    font-size: 1.2rem;
}

/* Responsividade */
@media (max-width: 900px) {
    .stats-section {
        justify-content: center;
    }

    .stat-item {
        flex: 1 1 calc(50% - 20px); /* 2 por linha */
    }
}

@media (max-width: 600px) {
    .stat-item {
        flex: 1 1 100%; /* Um por linha */
    }
}

/* Contact Section */
.contact-section {
  padding: 50px 5%;
}

.contact-container {
  display: flex;
  flex-direction: column;
  gap: 50px;
}

@media (min-width: 992px) {
  .contact-container {
    flex-direction: row;
  }

  .contact-info,
  .contact-form {
    width: 50%;
  }
}

.contact-info h2,
.contact-form h2 {
  font-size: 2rem;
  margin-bottom: 20px;
}

.contact-info p {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 30px;
}

.info-item {
  display: flex;
  align-items: flex-start;
  gap: 20px;
  margin-bottom: 30px;
}

.info-icon {
  width: 50px;
  height: 50px;
  background-color: rgba(30, 30, 30, 0.8);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.2rem;
  color: var(--primary-color);
  border: 2px solid var(--primary-color);
}

.info-content h3 {
  font-size: 1.2rem;
  margin-bottom: 5px;
}

.info-content p {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 0;
}

.social-contact h3 {
  font-size: 1.5rem;
  margin-bottom: 20px;
}

.social-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: 15px;
}

.social-contact-item {
  display: flex;
  align-items: center;
  gap: 15px;
  background-color: rgba(30, 30, 30, 0.8);
  padding: 15px;
  border-radius: 5px;
  transition: all 0.3s ease;
}

.social-contact-item:hover {
  transform: translateY(-5px);
}

.social-contact-item.youtube {
  border-left: 3px solid #ff0000;
}

.social-contact-item.youtube:hover {
  background-color: rgba(255, 0, 0, 0.2);
}

.social-contact-item.instagram {
  border-left: 3px solid #e1306c;
}

.social-contact-item.instagram:hover {
  background-color: rgba(225, 48, 108, 0.2);
}

.social-contact-item.twitter {
  border-left: 3px solid #1da1f2;
}

.social-contact-item.twitter:hover {
  background-color: rgba(29, 161, 242, 0.2);
}

.social-contact-item.discord {
  border-left: 3px solid #7289da;
}

.social-contact-item.discord:hover {
  background-color: rgba(114, 137, 218, 0.2);
}

.social-contact-item.twitch {
  border-left: 3px solid #9146ff;
}

.social-contact-item.twitch:hover {
  background-color: rgba(145, 70, 255, 0.2);
}

.social-contact-item.tiktok {
  border-left: 3px solid #ee1d52;
}

.social-contact-item.tiktok:hover {
  background-color: rgba(238, 29, 82, 0.2);
}

.social-contact-item i {
  font-size: 1.5rem;
}

.contact-form form {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  padding: 30px;
  border: 1px solid var(--border-color);
  backdrop-filter: blur(4px) !important;

}

.form-group {
  margin-bottom: 20px;
}

.form-group label {
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
}

.form-group input,
.form-group select,
.form-group textarea {
  width: 100%;
  padding: 12px 15px;
  background-color: rgba(0, 0, 0, 0.8);
  border: 1px solid var(--border-color);
  color: var(--text-color);
  border-radius: 5px;
  transition: all 0.3s ease;
}

.form-group input:focus,
.form-group select:focus,
.form-group textarea:focus {
  border-color: var(--primary-color);
  outline: none;
  box-shadow: 0 0 5px rgba(216, 19, 57, 0.5);
}

.checkbox-container {
  display: flex;
  align-items: center;
  gap: 10px;
}

.checkbox-container input {
  width: auto;
}

.faq-section {
  padding: 80px 5%;
  text-align: center;
}

.faq-container {
  max-width: 800px;
  margin: 50px auto 0;
}

.faq-item {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  margin-bottom: 20px;
  border: 1px solid var(--border-color);
  overflow: hidden;
}

.faq-question {
  padding: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
  transition: all 0.3s ease;
    backdrop-filter: blur(4px) !important;
}

.faq-question:hover {
  background-color: rgba(216, 19, 57, 0.1);
    backdrop-filter: blur(4px) !important;
}

.faq-question h3 {
  font-size: 1.2rem;
}

.faq-icon {
  transition: all 0.3s ease;
}

.faq-item.active .faq-icon {
  transform: rotate(45deg);
}

.faq-answer {
  padding: 0 20px;
  max-height: 0;
  overflow: hidden;
  transition: all 0.3s ease;
}

.faq-item.active .faq-answer {
  padding: 0 20px 20px;
  max-height: 500px;
}

.faq-answer p {
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.6;
}

/* Footer */
footer {
  background-color: rgba(10, 10, 10, 0.9);
  backdrop-filter: blur(10px);
  padding: 30px 5%;
  border-top: 1px solid var(--border-color);
}

.footer-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: 20px;
}

.footer-content p {
  color: rgba(255, 255, 255, 0.7);
}

.social-icons {
  display: flex;
  gap: 15px;
}

/* Animations */
[data-aos] {
  opacity: 1 !important;
  transform: none !important;
}

[data-aos].aos-animate {
  opacity: 100;
  transform: translateY(0);
}

[data-aos-delay="100"] {
  transition-delay: 0.1s;
}

[data-aos-delay="200"] {
  transition-delay: 0.2s;
}

[data-aos-delay="300"] {
  transition-delay: 0.3s;
}

[data-aos-delay="400"] {
  transition-delay: 0.4s;
}

[data-aos-delay="500"] {
  transition-delay: 0.5s;
}

/* Responsive Styles */
@media (max-width: 1200px) {
  .glitch {
    font-size: 3.5rem;
  }

  .timeline-item {
    width: 100%;
    padding-left: 70px;
    padding-right: 0;
    left: 0;
    text-align: left;
  }

  .timeline-container::after {
    left: 30px;
  }

  .timeline-dot {
    left: 20px;
  }

  .timeline-date {
    left: 0;
    top: 0;
    position: relative;
    margin-bottom: 10px;
  }

  .timeline-item:nth-child(odd) .timeline-dot,
  .timeline-item:nth-child(even) .timeline-dot {
    left: 20px;
  }

  .timeline-item:nth-child(odd) .timeline-date,
  .timeline-item:nth-child(even) .timeline-date {
    left: 0;
    right: auto;
  }
}

@media (max-width: 992px) {
  .nav-links {
    position: fixed;
    top: var(--header-height);
    left: -100%;
    width: 100%;
    height: calc(100vh - var(--header-height));
    background-color: rgba(10, 10, 10, 0.95);
    backdrop-filter: blur(10px);
    transition: all 0.5s ease;
    z-index: 999;
  }

  .nav-links.active {
    left: 0;
  }

  .nav-links ul {
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
  }

  .nav-links li {
    margin: 15px 0;
  }

  .hamburger {
    display: flex;
  }

  .hamburger.active .bar:nth-child(1) {
    transform: translateY(9px) rotate(45deg);
  }

  .hamburger.active .bar:nth-child(2) {
    opacity: 0;
  }

  .hamburger.active .bar:nth-child(3) {
    transform: translateY(-9px) rotate(-45deg);
  }

  .glitch {
    font-size: 3rem;
  }

  .news-card {
    grid-column: span 6;
  }

  .news-card.featured {
    grid-column: span 12;
  }
}

@media (max-width: 768px) {
  .logo-container {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }

  .hamburger {
    margin-left: auto;
  }

  .glitch {
    font-size: 2.5rem;
  }

  .cta-buttons {
    flex-direction: column;
    gap: 15px;
  }

  .news-card {
    grid-column: span 12;
  }

  .filter-bar {
    flex-direction: column;
    align-items: stretch;
  }

  .search-bar {
    width: 100%;
  }

  .search-bar input {
    width: 100%;
  }

  .modal-header {
    flex-direction: column;
    text-align: center;
  }

  .modal-logo {
    margin: 0 auto;
  }
}

@media (max-width: 576px) {
  .glitch {
    font-size: 2.5rem;
  }

  .hero-subtitle {
    font-size: 1.2rem;
  }

  .section-title {
    font-size: 2rem;
  }

  .featured-grid,
  .video-grid,
  .products-grid,
  .partners-grid,
  .team-grid {
    grid-template-columns: 1fr;
  }

  .newsletter-form {
    flex-direction: column;
  }

  .newsletter-form input {
    border-radius: 5px;
    margin-bottom: 15px;
  }

  .newsletter-form button {
    border-radius: 5px;
  }

  .social-grid {
    grid-template-columns: 1fr;
  }
}

.parceiros-carroussel {
  background-image: url('/assets/images/bg-site.jpg');
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
  padding: 60px 0;
  overflow: hidden;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.carousel-container {
  overflow: hidden;
  width: 100%;
  max-width: 50%; /* ocupa metade da página */
  position: relative;
}

.carousel-track {
  display: flex;
  transition: transform 3s cubic-bezier(0.77, 0, 0.175, 1);
}

.carousel-slide {
  flex: 0 0 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.carousel-slide img {
  max-width: 100%;
  max-height: 200px;
  transition: transform 0.6s ease-in-out;
  cursor: pointer;
}

.carousel-slide.active img {
  transform: scale(1.45);
}

@media (max-width: 768px) {
  .carousel-container {
    max-width: 90%;
  }

  .carousel-slide img {
    max-height: 140px;
  }

  .carousel-slide.active img {
    transform: scale(1.25);
  }
}

#latest-video-box {
  max-width: 100%;
  aspect-ratio: 16/9;
  overflow: hidden;
  border: 3px solid var(--primary-color);
  border-radius: 12px;
  margin: 20px auto;
}
iframe {
  width: 100%;
  height: 100%;
  border: none;
}

.live-box {
  position: relative;
  width: 100%;
  max-width: 720px;
  aspect-ratio: 16 / 9;
  margin: 0 auto;
  border-radius: 12px;
  overflow: hidden;
  border: 2px solid var(--primary-color);
}

.live-box iframe {
  width: 100%;
  height: 100%;
  border: none;
}

#video-box {
  max-width: 720px;
  margin: 0 auto;
  border: 2px solid var(--primary-color);
  border-radius: 12px;
  overflow: hidden;
}


#latest-video-box {
  max-width: 100%;
  aspect-ratio: 16/9;
  overflow: hidden;
  border: 3px solid var(--primary-color);
  border-radius: 12px;
  margin: 20px auto;
}
iframe {
  width: 100%;
  height: 100%;
  border: none;
}



#retro-bg {
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
  width: 100vw;
  height: 100vh;
  background: black;
  display: block;
}

    canvas {
      display: block;
      position: fixed;
      top: 0; left: 0;
      z-index: -1;
      background: #0a001f;
    }

    .pixelated {
  image-rendering: pixelated;
  transform: scale(1.05);
  filter: contrast(150%) brightness(120%);
  transition: all 0.3s ease;
  opacity: 0;
}

.pixelated.animate {
  transform: scale(1);
  filter: none;
  opacity: scroll;
}



/* 🧱 Seções com snap (experiência tipo “tela por tela”) */
.snap-section {
  scroll-snap-align: start;
  scroll-snap-stop: normal; /* mais fluido */

  justify-content: center;
  padding: 2rem;
  box-sizing: border-box;
}
.snap-section::-webkit-scrollbar {
  display: none;
}

/* ✅ Se você ainda quiser uma seção de tela cheia, adicione essa classe extra */
/* .snap-full { */
/* min-height: 100vh; */
/* } */

/* 🛑 Última snap-section: reduzida para permitir rolagem além dela */
.snap-section[data-last] {
  /* Esse valor ainda pode ser usado, se desejar menor que tela cheia */
  min-height: 90vh;
}

/* 🆓 Seção final livre (ex: banner + footer) sem snapping */
.non-snap {
  scroll-snap-align: none;
  scroll-snap-stop: normal;
  padding: 4rem 2rem;
  box-sizing: border-box;
  background: #000;
}
.non-snap {
  scroll-snap-align: none;
  scroll-snap-stop: normal;
  padding: 4rem 2rem;
  box-sizing: border-box;
  background: #000;
  min-height: 40vh;
}
/* ✅ Footer com altura mínima garantida */
footer {
  min-height: 20vh;
}



/* Estilização da seção parceiros, caso ainda não tenha */
.parceiros-carroussel {
  padding-bottom: 4rem;
  text-align: center;
}




/* Conteúdo inicialmente oculto */
.animated-content {
  opacity: 0;
  transform: translateX(0);
}

/* Esquerda → Centro */
.effect-car-left .animated-content {
  animation: carBrakeLeft 1s ease-out forwards;
}

/* Direita → Centro */
.effect-car-right .animated-content {
  animation: carBrakeRight 1s ease-out forwards;
}

/* Cima → Centro */
.effect-car-top .animated-content {
  animation: carBrakeTop 1s ease-out forwards;
}

/* Keyframes para os três sentidos restantes */
@keyframes carBrakeLeft {
  0% {
    transform: translateX(-150vw) skewX(-12deg);
    opacity: 0;
  }
  70% {
    transform: translateX(25px) skewX(3deg);
    opacity: 1;
  }
  100% {
    transform: translateX(0) skewX(0);
    opacity: 1;
  }
}

@keyframes carBrakeRight {
  0% {
    transform: translateX(150vw) skewX(12deg);
    opacity: 0;
  }
  70% {
    transform: translateX(-25px) skewX(-3deg);
    opacity: 1;
  }
  100% {
    transform: translateX(0) skewX(0);
    opacity: 1;
  }
}

@keyframes carBrakeTop {
  0% {
    transform: translateY(-150vh) skewY(-12deg);
    opacity: 0;
  }
  70% {
    transform: translateY(25px) skewY(3deg);
    opacity: 1;
  }
  100% {
    transform: translateY(0) skewY(0);
    opacity: 1;
  }
}









document.addEventListener("DOMContentLoaded", () => {
  // Variables
  const navbar = document.querySelector(".navbar")
  const hamburger = document.querySelector(".hamburger")
  const navLinks = document.querySelector(".nav-links")
  const faqItems = document.querySelectorAll(".faq-item")
  const partnerCards = document.querySelectorAll(".partner-card")
  const modalOverlay = document.querySelector(".modal-overlay")
  const closeModal = document.querySelector(".close-modal")
  const filterButtons = document.querySelectorAll(".filter-button")
  let lastScrollTop = 0

  // Initialize AOS elements
  initAOS()

  // Event Listeners
  window.addEventListener("scroll", handleScroll)
  hamburger.addEventListener("click", toggleMenu)

  // Initialize FAQ accordions
  faqItems.forEach((item) => {
    const question = item.querySelector(".faq-question")
    question.addEventListener("click", () => {
      item.classList.toggle("active")
    })
  })

  // Initialize Partner Modal
  if (partnerCards.length > 0 && modalOverlay) {
    partnerCards.forEach((card) => {
      card.querySelector("button").addEventListener("click", () => {
        const partnerId = card.getAttribute("data-partner-id")
        openPartnerModal(partnerId)
      })
    })

    closeModal.addEventListener("click", closePartnerModal)
    modalOverlay.addEventListener("click", (e) => {
      if (e.target === modalOverlay) {
        closePartnerModal()
      }
    })
  }

  // Initialize Filter Buttons
  if (filterButtons.length > 0) {
    filterButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const filter = button.getAttribute("data-filter")
        filterContent(filter)

        // Update active button
        filterButtons.forEach((btn) => btn.classList.remove("active"))
        button.classList.add("active")
      })
    })
  }
  
  // Contact Form Submission
  const contactForm = document.getElementById("contactForm")
  if (contactForm) {
    contactForm.addEventListener("submit", function (e) {
      e.preventDefault()

      // Simulate form submission
      const submitButton = this.querySelector('button[type="submit"]')
      const originalText = submitButton.textContent

      submitButton.disabled = true
      submitButton.textContent = "Enviando..."

      // Simulate API call
      setTimeout(() => {
        alert("Mensagem enviada com sucesso! Entraremos em contato em breve.")
        contactForm.reset()
        submitButton.disabled = false
        submitButton.textContent = originalText
      }, 1500)
    })
  }

  // Functions
  function handleScroll() {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop

    // Navbar hide/show on scroll
    if (scrollTop > lastScrollTop && scrollTop > 100) {
      navbar.classList.add("hidden")
    } else {
      navbar.classList.remove("hidden")
    }

    lastScrollTop = scrollTop

    // Animate elements on scroll
    animateOnScroll()
  }

  function toggleMenu() {
    hamburger.classList.toggle("active")
    navLinks.classList.toggle("active")
    document.body.classList.toggle("no-scroll")
  }

  function openPartnerModal(partnerId) {
    // In a real application, you would fetch partner data based on the ID
    // For now, we'll just show the modal with placeholder content
    const modalTitle = document.querySelector(".modal-title h2")
    const modalCategory = document.querySelector(".modal-category")
    const modalDescription = document.querySelector(".modal-description p")

    // Sample data - in a real app, this would come from an API or database
    const partnerData = {
      1: {
        name: "E-Cast",
        category: "Soluções em Streaming",
        description:
          "E-Cast é uma plataforma de streaming que oferece soluções completas para transmissões ao vivo e sob demanda. Com tecnologia de ponta e suporte especializado, a E-Cast é a escolha ideal para quem busca qualidade e confiabilidade em suas transmissões.",
      },
      2: {
        name: "Entretonic",
        category: "Máquinas de Fliperamas Arcades",
        description:
          "Entretonic é uma empresa especializada na fabricação e restauração de máquinas de fliperama. Com uma equipe de técnicos experientes, a Entretonic oferece serviços de manutenção, personalização e venda de máquinas arcade, trazendo de volta a nostalgia dos jogos clássicos.",
      },
      3: {
        name: "Frames Gamer",
        category: "Artes e Molduras",
        description:
          "Frames Gamer é uma empresa especializada na criação de artes e molduras personalizadas para jogos e colecionáveis. Com uma equipe de artistas talentosos, a Frames Gamer oferece serviços de design gráfico, ilustração e impressão de alta qualidade, ajudando os fãs a exibir suas coleções com estilo.",
      },
      4: {
        name: "Revolution Sticks",
        category: "Controles e Arcades",
        description:
          "Revolution Sticks é uma empresa especializada na fabricação de controles personalizados e acessórios para jogos. Com uma equipe de engenheiros e designers apaixonados por games, a Revolution Sticks oferece produtos de alta qualidade que melhoram a experiência de jogo, incluindo controles arcade, joysticks e botões personalizados.",
      },
      5: {
        name: "Retro Game Fest",
        category: "Eventos",
        description:
          "Retro Game Fest é uma empresa organizadora de eventos e competições de jogos retrô em todo o Brasil. Desde 2017, a empresa realiza anualmente o maior festival de jogos retrô do país, reunindo colecionadores, jogadores, desenvolvedores e entusiastas. O evento conta com torneios, exposições, palestras, área de vendas e muito mais, celebrando a história e o legado dos videogames.",
      },
      6: {
        name: "8-Bit Brewery",
        category: "Bebidas & Alimentação",
        description:
          "8-Bit Brewery é uma cervejaria artesanal com rótulos inspirados em jogos clássicos e cultura retrô. Fundada em 2019 por amigos gamers e cervejeiros, a empresa produz cervejas artesanais com nomes, sabores e rótulos que homenageiam clássicos dos videogames. Além das cervejas, a 8-Bit Brewery também possui um brewpub temático em São Paulo, onde os clientes podem jogar em consoles retrô enquanto degustam as criações da casa.",
      },
    }

    // Update modal content
    if (partnerData[partnerId]) {
      const partner = partnerData[partnerId]
      modalTitle.textContent = partner.name
      modalCategory.textContent = partner.category
      modalDescription.textContent = partner.description
    }

    // Show modal
    modalOverlay.classList.add("active")
    document.body.style.overflow = "hidden"
  }

  function closePartnerModal() {
    modalOverlay.classList.remove("active")
    document.body.style.overflow = ""
  }

  function filterContent(filter) {
    // This function would filter content based on the selected category
    // For now, we'll just log the filter
    console.log("Filtering by:", filter)

    // In a real application, you would show/hide elements based on the filter
    // Example:
    // const items = document.querySelectorAll('.filterable-item');
    // items.forEach(item => {
    //     if (filter === 'all' || item.classList.contains(filter)) {
    //         item.style.display = 'block';
    //     } else {
    //         item.style.display = 'none';
    //     }
    // });
  }

  function initAOS() {
    // Find all elements with data-aos attribute
    const aosElements = document.querySelectorAll("[data-aos]")

    // Set initial state
    aosElements.forEach((element) => {
      element.style.opacity = "0"
      element.style.transform = "translateY(50px)"
    })

    // Trigger initial check
    animateOnScroll()
  }

  function animateOnScroll() {
    const aosElements = document.querySelectorAll("[data-aos]")

    aosElements.forEach((element) => {
      if (isElementInViewport(element)) {
        element.classList.add("aos-animate")
      }
    })
  }

  function isElementInViewport(el) {
    const rect = el.getBoundingClientRect()
    return rect.top <= (window.innerHeight || document.documentElement.clientHeight) * 0.75
  }

  // Hero Logo Animation
  const heroLogo = document.querySelector(".hero-logo")
  if (heroLogo) {
    heroLogo.addEventListener("mouseover", () => {
      heroLogo.style.filter = "drop-shadow(0 0 15px var(--primary-color))"
    })

    heroLogo.addEventListener("mouseout", () => {
      heroLogo.style.filter = ""
    })
  }

  // Video Card Hover Effects
  const videoCards = document.querySelectorAll(".video-card")
  videoCards.forEach((card) => {
    card.addEventListener("mouseover", () => {
      const playButton = card.querySelector(".play-button")
      if (playButton) {
        playButton.style.opacity = "1"
      }
    })

    card.addEventListener("mouseout", () => {
      const playButton = card.querySelector(".play-button")
      if (playButton) {
        playButton.style.opacity = "0"
      }
    })
  })
})


  // Partenrs Carroussel close to Footer
document.addEventListener("DOMContentLoaded", () => {
  const track = document.querySelector(".carousel-track");
  const container = document.querySelector(".carousel-container");
  let slides = Array.from(track.children);
  const pauseTime = 2000;     // pausa após chegar ao centro
  const slideTime = 3000;     // tempo de transição
  let paused = false;
  let timeout;

  function activateZoom() {
    slides.forEach(s => s.classList.remove("active"));
    slides[0].classList.add("active");
  }

  function next() {
    if (paused) return;
    track.style.transition = `transform ${slideTime}ms cubic-bezier(0.77, 0, 0.175, 1)`;
    track.style.transform = `translateX(-100%)`;
    track.addEventListener("transitionend", onTransitionEnd, { once: true });
  }

  function onTransitionEnd() {
    track.style.transition = 'none';
    track.style.transform = 'translateX(0)';
    const first = slides.shift();
    track.appendChild(first);
    slides.push(first);
    activateZoom();
    timeout = setTimeout(next, pauseTime);
  }

  slides.forEach(slide => {
    slide.querySelector("img").addEventListener("click", e => {
      const link = e.currentTarget.dataset.link;
      if (link) window.open(link, "_blank");
    });
  });

  container.addEventListener("mouseenter", () => {
    paused = true;
    clearTimeout(timeout);
    track.style.transition = '';
  });

  container.addEventListener("mouseleave", () => {
    paused = false;
    setTimeout(next, 300);
  });

  activateZoom();
  timeout = setTimeout(next, pauseTime);
});




  // YouTube Player
const canalID = "UCSPC6X4M-tVPeK4IZMbK5aw"; // Substitua pelo ID do canal
  const videoBox = document.getElementById("video-box");

  function carregarIframe(videoId) {
    const iframe = document.createElement("iframe");
    iframe.src = `https://www.youtube.com/embed/${videoId}`;
    iframe.allow = "autoplay; encrypted-media";
    iframe.allowFullscreen = true;
    iframe.frameBorder = "0";
    iframe.style.width = "100%";
    iframe.style.aspectRatio = "16 / 9";
    iframe.style.border = "none";
    videoBox.innerHTML = "";
    videoBox.appendChild(iframe);
  }

  fetch(`https://feedrapp.info/api/v1/converter?url=https://www.youtube.com/feeds/videos.xml?channel_id=${canalID}`)
    .then(res => res.json())
    .then(data => {
      const videoUrl = data.items?.[0]?.link;
      if (videoUrl) {
        const videoId = new URL(videoUrl).searchParams.get("v");
        carregarIframe(videoId);
      } else {
        videoBox.innerHTML = "<p>Vídeo não encontrado.</p>";
      }
    })
    .catch(err => {
      console.error(err);
      videoBox.innerHTML = "<p>Não foi possível carregar o vídeo.</p>";
    });


    const channelID = "UCSPC6X4M-tVPeK4IZMbK5aw";
  const apiUrl = `https://api.rss2json.com/v1/api.json?rss_url=https://www.youtube.com/feeds/videos.xml?channel_id=${channelID}`;

  fetch(apiUrl)
    .then(res => res.json())
    .then(data => {
      const videoId = data.items[0].link.split('=')[1];
      const iframe = `<iframe width="560" height="315" src="https://www.youtube.com/embed/${videoId}" frameborder="0" allowfullscreen></iframe>`;
      document.getElementById("latest-video-box").innerHTML = iframe;
    })
    .catch(err => {
      console.error("Erro ao carregar vídeo:", err);
      document.getElementById("latest-video-box").innerText = "Erro ao carregar vídeo.";
    });
    
    
   // Background with Pacman interactive with mouse
const canvas = document.getElementById('retro-bg');
const ctx = canvas.getContext('2d');

let width = canvas.width = window.innerWidth;
let height = canvas.height = window.innerHeight;

const tileSize = 40;
const cols = Math.floor(width / tileSize);
const rows = Math.floor(height / tileSize);

// Cores CMYK com transparência equivalente a #3cc81c10
const mazeColors = [
  '#fb234e15', // Red
  '#f8862215', // Orange
  '#f0ed2115', // Yellow
  '#47ef2115', // Green
  '#23d6e315', // Cyan
  '#2326e015', // Blue
  '#a221dd15', // Mageta
];

// Escolhe uma cor aleatória para o labirinto
const mazeColor = mazeColors[Math.floor(Math.random() * mazeColors.length)];

let maze = [];

function generateMaze() {
  maze = [];
  for (let y = 0; y < rows; y++) {
    maze[y] = [];
    for (let x = 0; x < cols; x++) {
      if (x === 0 || y === 0 || x === cols - 1 || y === rows - 1) {
        maze[y][x] = 1;
      } else {
        if (x % 5 === 0) {
          maze[y][x] = Math.random() < 0.8 ? 1 : 0;
        } else if (y % 4 === 0) {
          maze[y][x] = Math.random() < 0.6 ? 1 : 0;
        } else {
          maze[y][x] = 0;
        }
      }
    }
  }
}

generateMaze();

const mouse = { x: Math.floor(cols / 2), y: Math.floor(rows / 2) };

document.addEventListener('mousemove', e => {
  mouse.x = Math.min(cols - 1, Math.max(0, Math.floor(e.clientX / tileSize)));
  mouse.y = Math.min(rows - 1, Math.max(0, Math.floor(e.clientY / tileSize)));
});

class Particle {
  constructor() {
    this.reset();
  }
  reset() {
    this.x = Math.random() * width;
    this.y = Math.random() * height;
    this.size = Math.random() * 2 + 1;
    this.baseX = this.x;
    this.baseY = this.y;
    const colors = ['#3d3558', '#2e2a49', '#4a4367'];
    this.color = colors[Math.floor(Math.random() * colors.length)];
  }
  draw() {
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
    ctx.fillStyle = this.color;
    ctx.shadowColor = this.color;
    ctx.shadowBlur = 5;
    ctx.fill();
  }
  update() {
    const dx = this.x - mouse.x * tileSize;
    const dy = this.y - mouse.y * tileSize;
    const dist = Math.sqrt(dx * dx + dy * dy);
    const maxDist = 120;
    const force = (maxDist - dist) / maxDist;

    if (dist < maxDist) {
      this.x += dx / dist * force * 1.2;
      this.y += dy / dist * force * 1.2;
    } else {
      this.x += (this.baseX - this.x) * 0.02;
      this.y += (this.baseY - this.y) * 0.02;
    }
  }
}

let particles = [];
for (let i = 0; i < 100; i++) {
  particles.push(new Particle());
}

const pacman = {
  x: 1,
  y: 1,
  px: 1,
  py: 1,
  angle: 0,
  direction: 'right',
  path: [],
  speed: 0.07,
  moving: false,
  target: null
};

function heuristic(a, b) {
  return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);
}

function findPath(start, end) {
  const openSet = [start];
  const cameFrom = {};
  const gScore = {};
  const fScore = {};

  function nodeKey(n) {
    return `${n.x},${n.y}`;
  }

  gScore[nodeKey(start)] = 0;
  fScore[nodeKey(start)] = heuristic(start, end);

  while (openSet.length > 0) {
    openSet.sort((a, b) => fScore[nodeKey(a)] - fScore[nodeKey(b)]);
    const current = openSet.shift();
    if (current.x === end.x && current.y === end.y) {
      const path = [];
      let temp = nodeKey(current);
      while (temp in cameFrom) {
        path.unshift(cameFrom[temp]);
        temp = nodeKey(cameFrom[temp]);
      }
      return path;
    }

    const neighbors = [
      { x: current.x + 1, y: current.y },
      { x: current.x - 1, y: current.y },
      { x: current.x, y: current.y + 1 },
      { x: current.x, y: current.y - 1 }
    ];

    for (const neighbor of neighbors) {
      if (
        neighbor.x < 0 || neighbor.x >= cols ||
        neighbor.y < 0 || neighbor.y >= rows ||
        maze[neighbor.y][neighbor.x] === 1
      ) continue;

      const tentativeG = gScore[nodeKey(current)] + 1;
      const key = nodeKey(neighbor);
      if (!(key in gScore) || tentativeG < gScore[key]) {
        cameFrom[key] = current;
        gScore[key] = tentativeG;
        fScore[key] = tentativeG + heuristic(neighbor, end);
        if (!openSet.find(n => n.x === neighbor.x && n.y === neighbor.y)) {
          openSet.push(neighbor);
        }
      }
    }
  }
  return [];
}

function updatePacman() {
  if (!pacman.moving) {
    const target = { x: mouse.x, y: mouse.y };
    if (pacman.path.length === 0 || Math.random() < 0.02) {
      pacman.path = findPath({ x: Math.round(pacman.px), y: Math.round(pacman.py) }, target);
    }
    if (pacman.path.length > 0) {
      pacman.target = pacman.path.shift();
      pacman.moving = true;

      if (pacman.target.x > pacman.px) pacman.direction = 'right';
      else if (pacman.target.x < pacman.px) pacman.direction = 'left';
      else if (pacman.target.y > pacman.py) pacman.direction = 'down';
      else if (pacman.target.y < pacman.py) pacman.direction = 'up';
    }
  }

  if (pacman.moving && pacman.target) {
    const dx = pacman.target.x - pacman.px;
    const dy = pacman.target.y - pacman.py;
    const dist = Math.sqrt(dx * dx + dy * dy);

    if (dist < pacman.speed) {
      pacman.px = pacman.target.x;
      pacman.py = pacman.target.y;
      pacman.moving = false;
      pacman.x = pacman.target.x;
      pacman.y = pacman.target.y;
      pacman.target = null;
    } else {
      pacman.px += (dx / dist) * pacman.speed;
      pacman.py += (dy / dist) * pacman.speed;
    }
  }

  pacman.angle += 0.2;
}

function drawMaze() {
  for (let y = 0; y < rows; y++) {
    for (let x = 0; x < cols; x++) {
      if (maze[y][x] === 1) {
        ctx.fillStyle = mazeColor;
        ctx.fillRect(x * tileSize, y * tileSize, tileSize, tileSize);
        ctx.strokeStyle = mazeColor;
        ctx.lineWidth = 1;
        ctx.strokeRect(x * tileSize, y * tileSize, tileSize, tileSize);
      }
    }
  }
}

function drawPacman() {
  const cx = pacman.px * tileSize + tileSize / 2;
  const cy = pacman.py * tileSize + tileSize / 2;
  const r = tileSize / 2 - 4;

  const mouth = Math.abs(Math.sin(pacman.angle)) * Math.PI / 5;

  let rotation = 0;
  if (pacman.direction === 'right') rotation = 0;
  else if (pacman.direction === 'left') rotation = Math.PI;
  else if (pacman.direction === 'up') rotation = -Math.PI / 2;
  else if (pacman.direction === 'down') rotation = Math.PI / 2;

  ctx.save();
  ctx.translate(cx, cy);
  ctx.rotate(rotation);
  ctx.beginPath();
  ctx.moveTo(0, 0);
  ctx.arc(0, 0, r, mouth, 2 * Math.PI - mouth);
  ctx.lineTo(0, 0);
  ctx.fillStyle = '#d4c05a';
  ctx.shadowColor = '#d4c05a';
  ctx.shadowBlur = 8;
  ctx.fill();
  ctx.restore();
}

function animate() {
  ctx.clearRect(0, 0, width, height);

  drawMaze();
  updatePacman();
  drawPacman();

  for (const p of particles) {
    p.update();
    p.draw();
  }

  requestAnimationFrame(animate);
}

animate();

window.addEventListener('resize', () => {
  width = canvas.width = window.innerWidth;
  height = canvas.height = window.innerHeight;
});


// Pixeated effect
document.addEventListener("DOMContentLoaded", () => {
  const pixelatedSections = document.querySelectorAll(".pixelated");

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add("animate");
        observer.unobserve(entry.target); // anima apenas uma vez
      }
    });
  }, {
    threshold: 0.3 // ativa quando 30% da seção estiver visível
  });

  pixelatedSections.forEach(section => {
    observer.observe(section);
  });
});




// Tetris Viewport effect
document.addEventListener("DOMContentLoaded", () => {
  const sections = document.querySelectorAll(".animated-section");

  const effects = [
    "effect-car-left",
    "effect-car-right",
    "effect-car-top"
    // "effect-car-bottom" removido
  ];

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const section = entry.target;
        const content = section.querySelector(".animated-content");

        if (content && !content.classList.contains("animated")) {
          const randomEffect = effects[Math.floor(Math.random() * effects.length)];
          section.classList.add(randomEffect);
          content.classList.add("animated");
        }

        observer.unobserve(section); // remove se não quiser repetir
      }
    });
  }, {
    threshold: 0.4
  });

  sections.forEach(section => observer.observe(section));
});
